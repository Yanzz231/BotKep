import { config } from './src/types';
import { IReaction } from './src/types';
import { ISexAnime } from './src/types';
import { IWaifu } from './src/types';
import { IImgboard } from './src/types';
declare class Scathach {
    private config;
    private useragent;
    private apikey;
    static default: typeof Scathach;
    constructor(config?: config);
    /**
     * Get a random normalizes FGO sex data
     * @returns Unfiltered <code>scathach.redsplit.org/v5/fgo</code> Response
     */
    getFgo(): Promise<ISexAnime>;
    /**
     * Get a random normalizes Genshin impact sex data
     * @returns Unfiltered <code>scathach.redsplit.org/v5/genshin</code> Response
     */
    getGenshin(): Promise<ISexAnime>;
    /**
    * Get a random normalizes Azur lane sex data
    * @returns Unfiltered <code>scathach.redsplit.org/v5/azur_lane</code> Response
    */
    getAzur(): Promise<ISexAnime>;
    /**
     * Get a Random Normalizes wholesome waifu data
     * @returns Unfiltered scathach.redsplit.org/v5/waifu Response
     */
    getWaifu(): Promise<IWaifu>;
    /**
    * Get a random normalizes Arknights sex data
    * @returns Unfiltered <code>scathach.redsplit.org/v5/arknights</code> Response
    */
    getArknights(): Promise<ISexAnime>;
    /**
    * Get a random normalizes Fire emblem sex data
    * @returns Unfiltered <code>scathach.redsplit.org/v5/fire_emblem</code> Response
    */
    getFireEmblem(): Promise<ISexAnime>;
    /**
    * Get a random normalizes Girls' frontline sex data
    * @returns Unfiltered <code>scathach.redsplit.org/v5/gfl</code> Response
    */
    getGirlsFrontline(): Promise<ISexAnime>;
    /**
    * Get a random normalizes Hololive vtuber sex data
    * @returns Unfiltered <code>scathach.redsplit.org/v5/hololive</code> Response
    */
    getHololive(): Promise<ISexAnime>;
    /**
    * Get a random normalizes Kancolle girls sex data
    * @returns Unfiltered <code>scathach.redsplit.org/v5/kancolle</code> Response
    */
    getKancolle(): Promise<ISexAnime>;
    /**
     * Get a random sex porn gif real shit
     * @returns Unfiltered scathach.redsplit.org/v5/sex Response
     */
    getSex(): Promise<ISexAnime>;
    /**
     * Get a reaction from servant fate
     * @param img The reaction to get
     * @example
     * getReaction("angry")
     * getReaction("bonk")
     * getReaction("cry")
     * getReaction("happy")
     * getReaction("hug")
     * getReaction("kiss")
     * getReaction("lol")
     * getReaction("nom")
     * getReaction("pat")
     * getReaction("pout")
     * getReaction("smug")
     * getReaction("uwu")
     * getReaction("wink")
     * @returns the random reaction that endpoints given
     */
    getReaction(img: string): Promise<IReaction>;
    /**
     * Get random anime sex
     * @param img The endpoints to get
     * @example
     * getAnimeSex("ass")
     * getAnimeSex("bdsm")
     * getAnimeSex("cum")
     * getAnimeSex("creampie")
     * getAnimeSex("manga")
     * getAnimeSex("femdom")
     * getAnimeSex("hentai")
     * getAnimeSex("incest")
     * getAnimeSex("masturbation")
     * getAnimeSex("public")
     * getAnimeSex("ero")
     * getAnimeSex("orgy")
     * getAnimeSex("elves")
     * getAnimeSex("yuri")
     * getAnimeSex("pantsu")
     * getAnimeSex("glasses")
     * getAnimeSex("blowjob")
     * getAnimeSex("boobjob")
     * getAnimeSex("foot")
     * getAnimeSex("thighs")
     * getAnimeSex("vagina")
     * getAnimeSex("ahegao")
     * getAnimeSex("uniform")
     * getAnimeSex("gangbang")
     * getAnimeSex("tentacles")
     * getAnimeSex("gif")
     * getAnimeSex("neko")
     * getAnimeSex("nsfwMobileWallpaper")
     * getAnimeSex("zettaiRyouiki")
     * @returns the random anime sex from endpoints given
     */
    getAnimeSex(img: string): Promise<IReaction>;
    /**
     * Bulk image request from gelbooru
     * @param tags The Tags your want to use for your Search
     * @param limit the amount of posts you want back
     * @param page the page you want to search on
     * @example
     * searchGelbooru("cat_girl")
     * searchGelbooru("cat_girl", 25)
     * searchGelbooru("cat_girl", 25, 2)
     * @returns A data that represents the proxied gelbooru response from scathach bot
     */
    searchGelbooru(tags: string | string[], limit?: number, page?: number): Promise<IImgboard>;
    /**
     * Bulk image request from r34
     * @param tags The Tags your want to use for your Search
     * @param limit the amount of posts you want back
     * @param page the page you want to search on
     * @example
     * searchR34("futanari")
     * searchR34("futanari", 25)
     * searchR34("futanari", 25, 2)
     * @returns A data that represents the proxied r34 response from scathach bot
     */
    searchR34(tags: string | string[], limit?: number, page?: number): Promise<IImgboard>;
    /**
     * Bulk image request from safebooru
     * @param tags The Tags your want to use for your Search
     * @param limit the amount of posts you want back
     * @param page the page you want to search on
     * @example
     * searchSafebooru("cat")
     * searchSafebooru("cat", 25)
     * searchSafebooru("cat", 25, 2)
     * @returns A data that represents the proxied safebooru response from scathach bot
     */
    searchSafe(tags: string | string[], limit?: number, page?: number): Promise<IImgboard>;
}
export = Scathach;
